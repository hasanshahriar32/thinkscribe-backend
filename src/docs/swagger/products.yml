openapi: 3.1.0
info:
  title: Thinkscribe Products API
  version: 1.0.0
  description: Product and category management endpoints
tags:
  - name: Products
    description: Product management operations
  - name: ProductCategories
    description: Product category management operations

paths:
  /products:
    get:
      summary: Get all products
      tags: [Products]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          $ref: '#/components/responses/4XX'
    post:
      summary: Create a new product
      tags: [Products]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          $ref: '#/components/responses/4XX'
  /products/{id}:
    get:
      summary: Get a product by ID
      tags: [Products]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          $ref: '#/components/responses/4XX'
    put:
      summary: Update a product
      tags: [Products]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          $ref: '#/components/responses/4XX'
    delete:
      summary: Delete a product
      tags: [Products]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Product deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          $ref: '#/components/responses/4XX'
  /product-categories:
    get:
      summary: Get all product categories
      tags: [ProductCategories]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of product categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategory'
        '401':
          $ref: '#/components/responses/4XX'
    post:
      summary: Create a new product category
      tags: [ProductCategories]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
      responses:
        '200':
          description: Product category created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        '401':
          $ref: '#/components/responses/4XX'
  /product-categories/{id}:
    get:
      summary: Get a product category by ID
      tags: [ProductCategories]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Product category found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        '401':
          $ref: '#/components/responses/4XX'
    put:
      summary: Update a product category
      tags: [ProductCategories]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
      responses:
        '200':
          description: Product category updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        '401':
          $ref: '#/components/responses/4XX'
    delete:
      summary: Delete a product category
      tags: [ProductCategories]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Product category deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        '401':
          $ref: '#/components/responses/4XX'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        categoryId:
          type: integer
        description:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
    ProductCategory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        This JWT is issued and validated by Clerk. To authenticate, use the access token provided by Clerk in the Authorization header:
        Authorization: Bearer <clerk_jwt_token>
        The token must be a valid Clerk session or access token. See https://clerk.com/docs/authentication/tokens for details.
  responses:
    '4XX':
      description: Error response (client error)
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              statusCode:
                type: integer
                example: 401
              message:
                type: string
                example: Unauthorized Access!
              data:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      example: /api/v1/users
                    message:
                      type: string
                      example: Unauthorized Access!
              meta:
                type: object
                nullable: true
                example: null

security:
  - bearerAuth: []

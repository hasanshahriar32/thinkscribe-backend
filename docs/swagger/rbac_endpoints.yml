paths:
  /api/v1/roles:
    get:
      summary: Get all roles
      tags: [Roles]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../swagger/openapi.yml#/components/schemas/Role'
    post:
      summary: Create a new role
      tags: [Roles]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Role'
      responses:
        '200':
          description: Role created
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Role'
  /api/v1/roles/{id}:
    get:
      summary: Get a role by ID
      tags: [Roles]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Role found
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Role'
    put:
      summary: Update a role
      tags: [Roles]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Role'
      responses:
        '200':
          description: Role updated
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Role'
    delete:
      summary: Delete a role
      tags: [Roles]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Role deleted
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Role'

  /api/v1/modules:
    get:
      summary: Get all modules
      tags: [Modules]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of modules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../swagger/openapi.yml#/components/schemas/Module'
    post:
      summary: Create a new module
      tags: [Modules]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Module' # Assuming ModuleInsert schema or similar for request
      responses:
        '201':
          description: Module created
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Module'
  /api/v1/modules/{id}:
    get:
      summary: Get a module by ID
      tags: [Modules]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Module found
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Module'
    put:
      summary: Update a module
      tags: [Modules]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Module' # Assuming ModuleUpdate schema or similar for request
      responses:
        '200':
          description: Module updated
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Module'
    delete:
      summary: Delete a module
      tags: [Modules]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Module deleted
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Module' # Or a success message schema

  /api/v1/sub-modules:
    get:
      summary: Get all sub-modules
      tags: [SubModules]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of sub-modules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../swagger/openapi.yml#/components/schemas/SubModule'
    post:
      summary: Create a new sub-module
      tags: [SubModules]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/SubModule' # Assuming SubModuleInsert
      responses:
        '201':
          description: Sub-module created
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/SubModule'
  /api/v1/sub-modules/{id}:
    get:
      summary: Get a sub-module by ID
      tags: [SubModules]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Sub-module found
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/SubModule'
    put:
      summary: Update a sub-module
      tags: [SubModules]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/SubModule' # Assuming SubModuleUpdate
      responses:
        '200':
          description: Sub-module updated
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/SubModule'
    delete:
      summary: Delete a sub-module
      tags: [SubModules]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Sub-module deleted
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/SubModule' # Or a success message

  /api/v1/permissions:
    get:
      summary: Get all permissions
      tags: [Permissions]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../swagger/openapi.yml#/components/schemas/Permission'
    post:
      summary: Create a new permission
      tags: [Permissions]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Permission' # Assuming PermissionInsert
      responses:
        '201':
          description: Permission created
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Permission'
  /api/v1/permissions/{id}:
    get:
      summary: Get a permission by ID
      tags: [Permissions]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Permission found
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Permission'
    put:
      summary: Update a permission
      tags: [Permissions]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Permission' # Assuming PermissionUpdate
      responses:
        '200':
          description: Permission updated
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Permission'
    delete:
      summary: Delete a permission
      tags: [Permissions]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Permission deleted
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Permission' # Or a success message

  /api/v1/actions:
    get:
      summary: Get all actions
      tags: [Actions]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of actions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../swagger/openapi.yml#/components/schemas/Action'
    post:
      summary: Create a new action
      tags: [Actions]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Action' # Assuming ActionInsert
      responses:
        '201':
          description: Action created
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Action'
  /api/v1/actions/{id}:
    get:
      summary: Get an action by ID
      tags: [Actions]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Action found
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Action'
    put:
      summary: Update an action
      tags: [Actions]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Action' # Assuming ActionUpdate
      responses:
        '200':
          description: Action updated
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Action'
    delete:
      summary: Delete an action
      tags: [Actions]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Action deleted
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Action' # Or a success message

  /api/v1/channels:
    get:
      summary: Get all channels
      tags: [Channels]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of channels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../swagger/openapi.yml#/components/schemas/Channel'
    post:
      summary: Create a new channel
      tags: [Channels]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Channel' # Assuming ChannelInsert
      responses:
        '201':
          description: Channel created
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Channel'
  /api/v1/channels/{id}:
    get:
      summary: Get a channel by ID
      tags: [Channels]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Channel found
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Channel'
    put:
      summary: Update a channel
      tags: [Channels]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../swagger/openapi.yml#/components/schemas/Channel' # Assuming ChannelUpdate
      responses:
        '200':
          description: Channel updated
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Channel'
    delete:
      summary: Delete a channel
      tags: [Channels]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Channel deleted
          content:
            application/json:
              schema:
                $ref: '../swagger/openapi.yml#/components/schemas/Channel' # Or a success message
# End of RBAC endpoints
